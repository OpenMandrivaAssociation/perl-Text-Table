%define upstream_name    Text-Table
%define upstream_version 1.123

Name:       perl-%{upstream_name}
Version:    %perl_convert_version %{upstream_version}
Release:    %mkrel 1

Summary:    Organize Data in Tables
License:    GPL+ or Artistic
Group:      Development/Perl
Url:        http://search.cpan.org/dist/%{upstream_name}
Source0:    http://www.cpan.org/modules/by-module/Text/%{upstream_name}-%{upstream_version}.tar.gz

BuildRequires: perl(Test::More)
BuildRequires: perl(Text::Aligner)
BuildArch: noarch
BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}

%description
Organization of data in table form is a time-honored and useful method of
data representation. While columns of data are trivially generated by
computer through formatted output, even simple tasks like keeping titles
aligned with the data columns are not trivial, and the one-shot solutions
one comes up with tend to be particularly hard to maintain. Text::Table
allows you to create and maintain tables that adapt to alignment
requirements as you use them.

Overview
    The process is simple: you create a table (a Text::Table object) by
    describing the columns the table is going to have. Then you load lines
    of data into the table, and finally print the resulting output lines.
    Alignment of data and column titles is handled dynamically in
    dependence on the data present.

Table Creation
    In the simplest case, if all you want is a number of (untitled)
    columns, you create an unspecified table and start adding data to it.
    The number of columns is taken fronm the first line of data.

%prep
%setup -q -n %{upstream_name}-%{upstream_version}

%build
%{__perl} Makefile.PL INSTALLDIRS=vendor

%make

%check
%make test

%install
rm -rf %buildroot
%makeinstall_std

%clean
rm -rf %buildroot

%files
%defattr(-,root,root)
%doc Changes LICENSE META.yml README
%{_mandir}/man3/*
%perl_vendorlib/*


